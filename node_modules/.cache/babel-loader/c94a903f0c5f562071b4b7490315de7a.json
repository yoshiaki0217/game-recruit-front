{"ast":null,"code":"import _taggedTemplateLiteral from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/usr/src/app/src/pages/PrivateChat.jsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2;\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Left from \"../images/left-arrow.svg\";\nimport DefaultIcon from '../images/default-icon.png';\nimport { ChatTextArea } from '../components/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PrivateChat = function PrivateChat(props) {\n  _s();\n\n  // ログイン機能が完了したらログインしているユーザーのIDを取得\n  var loginedUserId = Number(localStorage.getItem('userId'));\n  var friendData = props.location.state;\n  var roomId = props.match.params.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  useEffect(function () {\n    var unmounted = false;\n\n    if (!unmounted) {\n      upsertRead(loginedUserId, friendData.friendId, roomId);\n      getMessages(roomId); // getRead(loginedUserId, friendData.friendId);\n\n      unmounted = true;\n    }\n\n    window.Echo.channel('chat').listen('MessageCreated', function (e) {\n      getMessages(roomId);\n    });\n    window.Echo.channel('read-private').listen('ReadPrivateCreated', function (e) {\n      getMessages(roomId);\n    });\n  }, [roomId, loginedUserId, friendData]);\n\n  var getMessages = function getMessages(roomId) {\n    var url = process.env.REACT_APP_BACKEND_PATH;\n    axios.get(url + '/api/messages/private/' + roomId).then(function (res) {\n      setMessages(res.data.results.messages);\n      var element = document.documentElement;\n      var bottom = element.scrollHeight - element.clientHeight;\n      window.scroll(0, bottom);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var sendMessage = function sendMessage(e) {\n    if (!message) {\n      return false;\n    }\n\n    var url = process.env.REACT_APP_BACKEND_PATH;\n    e.target.parentElement.querySelector('textarea').value = '';\n    axios.post(url + '/api/private/chat/insert', {\n      private_room_id: roomId,\n      user_id: loginedUserId,\n      message: message\n    }).then(function (res) {// getMessages(loginedUserId, friendId);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var onChangeChatArea = function onChangeChatArea(e) {\n    rowsUpdate(e);\n    setMessage(e.target.value);\n  };\n\n  var MAX_ROWS = 10;\n  var rows = '1';\n  var beforeRows = '';\n\n  var rowsUpdate = function rowsUpdate(e) {\n    var value = e.target.value;\n    var line = value.split(\"\\n\").length;\n\n    if (rows === MAX_ROWS) {\n      if (beforeRows > line) {\n        rows = line;\n        e.target.setAttribute('rows', rows);\n        beforeRows = line;\n      }\n\n      beforeRows = line;\n    } else {\n      rows = line;\n      e.target.setAttribute('rows', rows);\n      beforeRows = line;\n    }\n\n    return true;\n  };\n\n  var upsertRead = function upsertRead(userId, friendId, roomId) {\n    var url = process.env.REACT_APP_BACKEND_PATH;\n    var date = new Date();\n    axios.post(url + '/api/read/upsert', {\n      user_id: userId,\n      friend_user_id: friendId,\n      watch_date: date.toLocaleString(),\n      room_id: roomId\n    }).then(function (res) {}).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChatSection, {\n      className: \"h-screen bg-sub\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-main flex justify-between items-center fixed top-0 z-50 h-12 w-full px-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"inline-block\",\n          to: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Left,\n            width: \"28\",\n            height: \"28\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-white text-xl\",\n          children: friendData.friendName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-white text-xl\",\n          to: '/mypage/' + friendData.friendId,\n          children: \"\\u8A73\\u7D30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ChatArea, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-12 px-4 py-1 bg-sub line__contents scroll pb-16\",\n          children: messages.map(function (data, index) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [data.user.user_name && data.user.id !== loginedUserId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"opponent flex items-start py-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"inline rounded-full m-1\",\n                  src: data.user.icon === null ? DefaultIcon : data.user.icon,\n                  width: \"35\",\n                  height: \"35\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"opponent-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"name\",\n                    children: data.user.user_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text text-sm break-words\",\n                    children: data.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 27\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 25\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, _this), data.user.user_name && data.user.id === loginedUserId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"myself flex flex-row items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text text-sm break-words\",\n                  children: data.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date\",\n                  children: [data.read_status === 1 ? '既読' : '', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 86\n                  }, _this), \"0:30\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 25\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ChatTextArea, {\n        className: \"\",\n        rows: rows,\n        onChange: onChangeChatArea,\n        onClick: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(PrivateChat, \"9iyGj6dRHK6V1mxAAjlNUec9m4A=\");\n\n_c = PrivateChat;\nvar ChatSection = styled.section(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n\\n\"])));\n_c2 = ChatSection;\nvar ChatArea = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  font-size: 80%;\\n\\n/* \\u4F1A\\u8A71\\u90E8\\u5206 */\\n.line__contents {\\n  // padding: 10px 10px 70px 10px;\\n  overflow: hidden;\\n  line-height: 135%;\\n}\\n\\n.scroll {\\n  height: auto;\\n  overflow-y: scroll;\\n}\\n\\n\\n/* \\u76F8\\u624B\\u306E\\u4F1A\\u8A71 */\\n.opponent {\\n    width: 100%;\\n    position: relative;\\n    margin-bottom: 5px;\\n    max-width: 83%;\\n    clear: both;\\n}\\n\\n.opponent .opponent-text {\\n  margin-left: 10px;\\n}\\n\\n.opponent .opponent-text .name {\\n  color: #000;\\n  font-size: 80%;\\n}\\n\\n/* \\u30B3\\u30E1\\u30F3\\u30C8\\u30A8\\u30EA\\u30A2 */\\n.opponent .text {\\n  margin: 0;\\n  position: relative;\\n  padding: 10px;\\n  border-radius: 20px;\\n  background-color: #ffffff;\\n}\\n\\n/* \\u5439\\u304D\\u51FA\\u3057 */\\n.opponent .text::after {\\n  content: '';\\n  position: absolute;\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  left: -10px;\\n  top: 5px;\\n  border-right: 20px solid #ffffff;\\n  // border-top: 10px solid transparent;\\n  border-bottom: 10px solid transparent;\\n}\\n\\n/* \\u81EA\\u5206\\u306E\\u4F1A\\u8A71 */\\n.myself {\\n    position: relative;\\n    display: block;\\n    margin: 5px 0;\\n    max-width: 80%;\\n    float: right;\\n    margin-right: 15px;\\n    clear: both;\\n}\\n\\n/* \\u30B3\\u30E1\\u30F3\\u30C8\\u30A8\\u30EA\\u30A2 */\\n.myself .text {\\n  padding: 10px;\\n  border-radius: 20px;\\n  background-color: #8de055;\\n  margin: 0;\\n  margin-left: 50px;\\n}\\n\\n/* \\u5439\\u304D\\u51FA\\u3057 */\\n.myself .text::after {\\n  content: '';\\n  position: absolute;\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  right: -10px;\\n  top: 10px;\\n  border-left: 20px solid #8de055;\\n  border-top: 10px solid transparent;\\n  border-bottom: 10px solid transparent;\\n}\\n\\n/* \\u65E2\\u8AAD\\u30A8\\u30EA\\u30A2 */\\n.myself .date {\\n  content: '';\\n  position: absolute;\\n  display: block;\\n  width: 100px;\\n  text-align: right;\\n  left: -60px;\\n  bottom: 0px;\\n  font-size: 80%;\\n  color: #000;\\n}\\n\"])));\n_c3 = ChatArea;\nexport default PrivateChat;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PrivateChat\");\n$RefreshReg$(_c2, \"ChatSection\");\n$RefreshReg$(_c3, \"ChatArea\");","map":{"version":3,"sources":["/usr/src/app/src/pages/PrivateChat.jsx"],"names":["useState","useEffect","axios","Link","styled","DefaultIcon","ChatTextArea","PrivateChat","props","loginedUserId","Number","localStorage","getItem","friendData","location","state","roomId","match","params","id","messages","setMessages","message","setMessage","unmounted","upsertRead","friendId","getMessages","window","Echo","channel","listen","e","url","process","env","REACT_APP_BACKEND_PATH","get","then","res","data","results","element","document","documentElement","bottom","scrollHeight","clientHeight","scroll","catch","error","console","log","sendMessage","target","parentElement","querySelector","value","post","private_room_id","user_id","onChangeChatArea","rowsUpdate","MAX_ROWS","rows","beforeRows","line","split","length","setAttribute","userId","date","Date","friend_user_id","watch_date","toLocaleString","room_id","Left","friendName","map","index","user","user_name","icon","read_status","ChatSection","section","ChatArea","div"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Left from '../images/left-arrow.svg'\nimport DefaultIcon from '../images/default-icon.png'\nimport { ChatTextArea } from '../components/index'\n\nconst PrivateChat = (props) => {\n  // ログイン機能が完了したらログインしているユーザーのIDを取得\n  const loginedUserId = Number(localStorage.getItem('userId'));\n  const friendData = props.location.state;\n  const roomId = props.match.params.id;\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    let unmounted = false;\n    if(!unmounted) {\n      upsertRead(loginedUserId, friendData.friendId, roomId);\n      getMessages(roomId);\n      // getRead(loginedUserId, friendData.friendId);\n      unmounted = true\n    }\n    window.Echo.channel('chat')\n    .listen('MessageCreated', (e) => {\n      getMessages(roomId);\n    });\n    window.Echo.channel('read-private')\n    .listen('ReadPrivateCreated', (e) => {\n      getMessages(roomId);\n    });\n  },[roomId, loginedUserId, friendData])\n\n  const getMessages = (roomId) => {\n    let url = process.env.REACT_APP_BACKEND_PATH;\n\n    axios.get(url + '/api/messages/private/' + roomId)\n    .then((res) => {\n      setMessages(res.data.results.messages);\n      let element = document.documentElement;\n      let bottom = element.scrollHeight - element.clientHeight;\n      window.scroll(0, bottom);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  const sendMessage = (e) => {\n    if(!message) {\n      return false;\n    }\n    let url = process.env.REACT_APP_BACKEND_PATH;\n\n    e.target.parentElement.querySelector('textarea').value = '';\n\n    axios.post(url + '/api/private/chat/insert', {\n      private_room_id : roomId,\n      user_id : loginedUserId,\n      message : message,\n    })\n    .then((res) => {\n      // getMessages(loginedUserId, friendId);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  const onChangeChatArea = (e) => {\n    rowsUpdate(e);\n    setMessage(e.target.value);\n  }\n\n  const MAX_ROWS = 10;\n  let rows = '1';\n  let beforeRows = '';\n  const rowsUpdate = (e) => {\n    let value = e.target.value\n    let line = value.split(\"\\n\").length\n\n    if(rows === MAX_ROWS) {\n      if(beforeRows > line) {\n        rows = line\n        e.target.setAttribute('rows', rows)\n        beforeRows = line\n      }\n      beforeRows = line\n    } else {\n      rows = line\n      e.target.setAttribute('rows', rows)\n      beforeRows = line\n    }\n    return true\n  }\n\n  const upsertRead = (userId, friendId, roomId) => {\n    let url = process.env.REACT_APP_BACKEND_PATH;\n    const date = new Date();\n\n    axios.post(url + '/api/read/upsert', {\n      user_id : userId,\n      friend_user_id : friendId,\n      watch_date : date.toLocaleString(),\n      room_id : roomId,\n    })\n    .then((res) => {\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  return (\n    <>\n      <ChatSection className=\"h-screen bg-sub\">\n        <div className=\"bg-main flex justify-between items-center fixed top-0 z-50 h-12 w-full px-4\">\n          <Link className=\"inline-block\" to=\"/home\">\n            <img src={ Left } width=\"28\" height=\"28\" alt=\"\" />\n          </Link>\n          <button className=\"text-white text-xl\">\n            { friendData.friendName }\n          </button>\n          <Link className=\"text-white text-xl\" to={'/mypage/' + friendData.friendId }>\n            詳細\n          </Link>\n        </div>\n\n        <ChatArea>\n          <div className=\"mt-12 px-4 py-1 bg-sub line__contents scroll pb-16\">\n            {\n              messages.map((data, index) => {\n                return (\n                  <div key={ index }>\n                    {/* チャット　相手 */}\n                    { data.user.user_name && data.user.id !== loginedUserId &&\n                      <div className=\"opponent flex items-start py-1\">\n                        <img className=\"inline rounded-full m-1\" src={ data.user.icon === null ? DefaultIcon : data.user.icon } width=\"35\" height=\"35\" alt=\"\" />\n                        <div className=\"opponent-text\">\n                          <div className=\"name\">{ data.user.user_name }</div>\n                          <p className=\"text text-sm break-words\">{ data.message }</p>\n                        </div>\n                      </div>\n                    }\n                    {/* チャット　自分自身 */}\n                    { data.user.user_name && data.user.id === loginedUserId &&\n                      <div　className=\"myself flex flex-row items-center\">\n                        <p className=\"text text-sm break-words\">{ data.message }</p>\n                        <span className=\"date\">{ data.read_status === 1 ? '既読' : '' }<br />0:30</span>\n                      </div>\n                    }\n                  </div>\n                )\n              })\n            }\n          </div>\n        </ChatArea>\n\n        <ChatTextArea className=\"\" rows={ rows } onChange={ onChangeChatArea } onClick={ sendMessage } />\n      </ChatSection>\n    </>\n  )\n}\n\nconst ChatSection = styled.section`\n\n`\n\nconst ChatArea = styled.div`\n  overflow: hidden;\n  font-size: 80%;\n\n/* 会話部分 */\n.line__contents {\n  // padding: 10px 10px 70px 10px;\n  overflow: hidden;\n  line-height: 135%;\n}\n\n.scroll {\n  height: auto;\n  overflow-y: scroll;\n}\n\n\n/* 相手の会話 */\n.opponent {\n    width: 100%;\n    position: relative;\n    margin-bottom: 5px;\n    max-width: 83%;\n    clear: both;\n}\n\n.opponent .opponent-text {\n  margin-left: 10px;\n}\n\n.opponent .opponent-text .name {\n  color: #000;\n  font-size: 80%;\n}\n\n/* コメントエリア */\n.opponent .text {\n  margin: 0;\n  position: relative;\n  padding: 10px;\n  border-radius: 20px;\n  background-color: #ffffff;\n}\n\n/* 吹き出し */\n.opponent .text::after {\n  content: '';\n  position: absolute;\n  display: block;\n  width: 0;\n  height: 0;\n  left: -10px;\n  top: 5px;\n  border-right: 20px solid #ffffff;\n  // border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n}\n\n/* 自分の会話 */\n.myself {\n    position: relative;\n    display: block;\n    margin: 5px 0;\n    max-width: 80%;\n    float: right;\n    margin-right: 15px;\n    clear: both;\n}\n\n/* コメントエリア */\n.myself .text {\n  padding: 10px;\n  border-radius: 20px;\n  background-color: #8de055;\n  margin: 0;\n  margin-left: 50px;\n}\n\n/* 吹き出し */\n.myself .text::after {\n  content: '';\n  position: absolute;\n  display: block;\n  width: 0;\n  height: 0;\n  right: -10px;\n  top: 10px;\n  border-left: 20px solid #8de055;\n  border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n}\n\n/* 既読エリア */\n.myself .date {\n  content: '';\n  position: absolute;\n  display: block;\n  width: 100px;\n  text-align: right;\n  left: -60px;\n  bottom: 0px;\n  font-size: 80%;\n  color: #000;\n}\n`\n\nexport default PrivateChat\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}